  <%= link_to "Look by Newest",  products_newest_path, class: 'btn btn-xs btn-primary mobile-button hay' %>
    <h1 class="text-center font-best">All<br><p class="h6">The Newest and Best Products</p></h1>
    <div class = "outerfixed" >
      <div class = "interstatic">
        <%= link_to "Post New Product", new_product_path(@product), class: 'btn btn-primary btn-xs to-right' %>
         <%= link_to "New Category", new_category_path, class: 'btn btn-primary btn-xs fuller' %>
        <div class="leaderboard">
               <table class="table table-striped table-hover fixer">
                  <thead>
                    <tr>
                      <th colspan="2" class="names">Top Users</th>
                      <th class="names">Score</th>
                    </tr>
                  </thead>
                   <tbody>
                     <% @leaders.each do |leader| %>
                       <% user = User.friendly.find(leader[:member].to_i) %>
                       <% rank = leader[:rank].to_i %>
                    <tr>
                      <td class="td"><%= rank %></td>
                      <td>
                        <%= link_to [user] do %>
                          <%= image_tag(user.identity.smallimage)%><p class="names"><%= user.name %></p>
                        <% end %>
                      </td>
                      <td class="td"><%= leader[:score].to_i %></td>
                    </tr>
                   <% end %>
                </tbody>
              </table> 
        </div>
      </div>
    </div>


<div class="row">
    <section class="panel">
      <header class="panel-heading">
        <div class="search_box">
          <form action="#" method="get">
            <input autocomplete="off" class="autocomplete" id="q" placeholder="Start typing" type="text" spellcheck="false" />
            <div class='searchbutton'>
              <i class="icon-search icon-large"></i>
            </div>
          </form>
        </div>
      </header>
    </section>

    <div id="categories"></div>
    <div id="users"></div>
    <div id="products"></div>

    <script type="text/javascript">
       function searchMultiCallback(success, content) {
          if (success) {
            var categories = content.results[0];
             var html = '';
            for (var i = 0; i < categories.hits.length; ++i) {
               var hit = categories.hits[i];
               html += '<div class="cats">';
          for (var propertyName in hit._highlightResult) {
            var el = hit._highlightResult[propertyName];
            if (Object.prototype.toString.call(el) !== '[object Array]' && el.matchLevel !== 'none') {
              html += '<div class="attribute">' + hit._highlightResult.title.value + "</div>";
            }
          }
          html += '</div>';
           $('#categories').html(html);
            }

            var users = content.results[1];
             var html = '';
            for (var i = 0; i < users.hits.length; ++i) {
              var hit = users.hits[i];
               html += '<div class="hit">';
                if (Object.prototype.toString.call(hit._highlightResult) !== '[object Array]' && hit._highlightResult.matchLevel !== 'none') {
              html += '<div class="attribute">'+'<a href="/categories/'+ hit.category_id + '/products/'+hit.slug+'">' + hit._highlightResult.title.value +
               '</a>' + '</div>';
             }
          html += '</div>';
           $('#products').html(html);
            }

            var products = content.results[2];
            for (var i = 0; i < products.hits.length; ++i) {
             var hit = products.hits[i];
             var html = '';
               html += '<div class="cats">';
          for (var propertyName in hit._highlightResult) {
            var el = hit._highlightResult[propertyName];
            if (Object.prototype.toString.call(el) !== '[object Array]' && el.matchLevel !== 'none') {
              html += '<div class="attribute">' + hit._highlightResult.name.value + "</div>";
            }
          }
          html += '</div>';
           $('#users').html(html);
            }
          }
        }
      function searchCallback(success, content) {
        if (content.query != $("#q").val()) {
          // do not take out-dated answers into account
          return;
        }
        if (content.hits.length == 0) {
          // no results
          $('#hits').empty();
          return;
        }
        // Scan all hits and display them
        var html = '';
        for (var i = 0; i < content.hits.length; ++i) {
          var hit = content.hits[i];
          // For example, display all properties that have at least
          // one highlighted word (matchLevel = full or partial)
          html += '<div class="hit">';
          for (var propertyName in hit._highlightResult) {
            var el = hit._highlightResult[propertyName];
            if (Object.prototype.toString.call(el) !== '[object Array]' && el.matchLevel !== 'none') {
              html += '<div class="attribute"><span>' + propertyName.substr(0,1).toUpperCase() +
                propertyName.substr(1) + ": </span>" + el.value + "</div>";
            }
          }
          html += '</div>';
        }
        $('#hits').html(html);
      }
      $(document).ready(function() {
        var $inputfield = $("#q");
        // Replace the following values by your ApplicationID and ApiKey.
       var client = new AlgoliaSearch("KFIEIP3I48", "7fffa97e4921141462636272ef5738ea");
        // Replace the following value by the name of the index you want to query.
        $inputfield.keyup(function() {
        client.startQueriesBatch();
        client.addQueryInBatch('Category', $('#q').val(), { hitsPerPage: 10 });
        client.addQueryInBatch('Product', $('#q').val(), { hitsPerPage: 10 });
        client.addQueryInBatch('User', $('#q').val(), { hitsPerPage: 10 });
        client.sendQueriesBatch(searchMultiCallback);
      }).focus().closest('form').on('submit', function() {
          // on form submit, store the query string in the anchor
          location.replace('#q=' + encodeURIComponent($inputfield.val()));
          return false;
        });
        // check if there is a query in the anchor: http://example.org/#q=my+query
        if (location.hash && location.hash.indexOf('#q=') === 0) {
          var q = decodeURIComponent(location.hash.substring(3));
          $inputfield.val(q).trigger('keyup');
        }
      });
    </script> 
    <div class="page">
     <%= render @products %>
    </div>
  </div>
<%= paginate @products %>
</div>

